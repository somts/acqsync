#!/usr/bin/env python3

'''usage: %prog [options]

Build series of rsync CLI commands per the Acqsync class.
This tool is used to sync data acquisition directories to shared
storage, and is the main warpper for executing.

EXAMPLE DRY RUN:
./bin/syncdas --dry-run \
        -L /tmp/acqsync.log \
        -P /tmp/acqsync.pid \
        -T etc/acqsync.example.yaml
'''
# CHANGELOG
# 2021-06:jmeyer: Standalone execution wrapper; logic to lib

import os
import sys
try:
    from dassync import DASSync
except (ModuleNotFoundError, NameError):
    # Append our path with this repo's lib dir
    sys.path.append(
        os.path.abspath(os.path.join(os.path.dirname(__file__),
                                     '../lib/python3/dist-packages')))
    from dassync import DASSync


def main():
    '''entry point when run from commandline'''
    sync = DASSync()
    if sync.conf.cruise.sync_run is True:
        sync.run_syncs()
    else:  # Do not run if disabled
        sync.logger.info(
            'Cruise sync_run is disabled in %s. Not an error. Exit.',
            sync.conf.targetsfilepath)


if __name__ == "__main__":
    main()
