# This file serves as an example file that can be copied to
# acqsync.yaml as the basis for getting started.  It can also
# be handed as an argument to bin/acsqync to test function.
# The outcome will be copying /dev/null to /tmp a few times.
---
configuration:
  cruise:
    id: XXport
    begin: 2021-01-01  # ISO format date
    end: 2021-01-31    # ISO format date
    sync_run: true     # false to disable sync of all items
  paths:
    pid: /var/tmp/acqsync.pid
    log: /var/tmp/acqsync.log
  rsync:
    path: /usr/bin/rsync
    # Options will expand to rsync command-line options.
    # NOTE: only long options, EG --option (not -o), are supported.
    #       See `man rsync` for details
    # Behavior depends on data type:
    #   Boolean         : --key (on true)
    #   Array/List      : --key="arr[0]" [--key="arr[1]" --key="arr[2]" etc]
    #   String/Int/Float: --key="value"
    options:
      recursive: true
      links: true
      times: true
      specials: true
      chmod: 'Dg+st,ugo+rx,Fo-w,+X'
      exclude:
        - '.Trash*/'
        - '._*'
        - .DS_Store
        - .TemporaryItems/
        - Thumbs.db
      human-readable: true
      one-file-system: true
      timeout: 60
items:  # items that python will create rsync-in-a-shell threads for.
  '/dev/null':  # src inherited from module name; must be unique
    enabled: true
    dst: '/tmp/{{ cruise.id }}'
  foo:
    enabled: true
    src: '/dev/null'
    dst: '/tmp/'
  bar:
    enabled: false
    src: '/dev/null'
    dst: '/tmp/{{ cruise.id }}_bar'
  baz:
    # implicit enabled
    src: '/dev/null'
    dst: /tmp/baz
    rsync_options: {exclude: baz/}
  '{{ paths.logfile }}':
    dst: /tmp/DASSync.log.txt
  '{{ paths.conffile }}':
    dst: /tmp/DASSync.yaml
  /var/run/intentional_failure:
    dst: /tmp/i-should-fail
...
